server:
  port: 8082

spring:
  application:
    name: Server-Provider
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      master:
        cloud:
          url: jdbc:mysql://106.52.151.187:3306/cloud?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
          username: root
          password: 123
        cloud1:
          url: jdbc:mysql://106.52.151.187:3306/cloud1?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
          username: root
          password: 123
      slave:
        cloud2:
          url: jdbc:mysql://106.52.151.187:3306/cloud2?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true
          username: root
          password: 123
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /monitor/druid/*
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  redis:
    database: 0
    host: 106.52.151.187
    port: 6379
    timeout: 3000
    jedis.pool:
      max-active: 50
      max-wait: 3000
      max-idle: 50
      min-idle: 10

  security:
    user:
      name: root
      password: 123
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://106.52.151.187:9411/ # 指定了 Zipkin 服务器的地址
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://root:123@127.0.0.1:8080/eureka/
  instance:
    prefer-ip-address: true
    ip-address: 127.0.0.1 #eureka和应用A在同一个局域网内，那么eureka默认暴露的是应用A在内网的地址。你需要在A应用注册eureka时配置使用外网IP
    instance-id: ${eureka.instance.ip-address}:${server.port}:${random.value}
xxl:
  job:
    admin:
      addresses: http://127.0.0.1:8888/xxl-job-admin
    executor:
      appname: 'xxl-job-executor-spring'
      logretentiondays: 30
      logpath: /data/applogs/xxl-job/jobhandler
    enabled: false
#      ip: 192.168.1.30
#      port: 9999
management:
  endpoints:
    enabled-by-default: true
core:
  filter:
    enable: true
mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
